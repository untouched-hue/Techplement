Commands used in the task

1.import random:
•	Command: import random
•	Explanation: This command imports the random module from Python's standard library. The random module provides functions for generating random numbers, selecting random elements from sequences, and shuffling lists.
2.def generate_password(length=12, complexity='hard'):
•	Command: def generate_password(length=12, complexity='hard')
•	Explanation: This defines a function named generate_password with two parameters:
o	length (default value 12): Specifies the length of the password to be generated.
o	complexity (default value 'hard'): Specifies the complexity level of the password. It can be 'easy', 'medium', or 'hard'.
3.characters += ...:
•	Command: characters += ...
•	Explanation: This part of the generate_password function defines different sets of characters based on the complexity level chosen by concatenating strings:
o	For 'easy': Concatenates digits (0-9) and lowercase letters (a-z).
o	For 'medium': Concatenates lowercase and uppercase letters (a-z, A-Z) and digits (0-9).
o	For 'hard': Concatenates lowercase and uppercase letters, digits, and punctuation symbols (a-z, A-Z, 0-9, !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~).
4.random.choice(characters):
•	Command: random.choice(characters)
•	Explanation: This function call selects a random character from the characters string. It's used within a list comprehension to generate each character of the password.
5..join(...):
•	Command: ''.join(...)
•	Explanation: This function call joins all the randomly chosen characters (generated by the list comprehension) into a single string, forming the complete generated password.

